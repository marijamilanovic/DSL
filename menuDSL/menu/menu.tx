/*
    An example textX language
*/

Program:
    'begin'
      menuSections*=MenuSections    // *= operator means zero or more matches.
      // commands will be
      // a list of command objects
    'end'
;

// this is an example of abstract rule. command class will never be instantiated
// in the model.
MenuSections:
    Header | Dishes | Drinks
;

Header:
	'Header' header_size=Size (header_color=Color)? ':' name=STRING
;

Size:
	'H1' | 'H2' | 'H3' | 'H4' | 'H5' | 'H6'
;

Color:
	'black' | 'blue' | 'brown' | 'green' | 'grey' | 'orange' | 'pink' | 'purple' |'red' | 'white' |'yellow'
;

Style:
    'Bold' | 'Italic' | 'Underline'
;

Dishes:
    'Filter dish by type:' dish_type=DishType ';'
	'Font size:' font_size=Size (color=Color)? ';'
	'Font style:' (font_style=Style)?
;

DishType:
	'MainDishes' | 'Appetizers' | 'HouseSpecials' | 'Soups' | 'Salads' | 'Desert' | 'FastingDishes'
;

Drinks:
    'Filter drinks by type:' drink_type=DrinkType ';' 
	'Font size:' font_size=Size (color=Color)? ';'
	'Font style:' (font_style=Style)?
;

DrinkType:
	'Alchocol' | 'Carbonated' | 'Juices' | 'HotDrinks'
;


MoveCommand:
    direction=Direction (steps=INT)?
;

// this is an example of a match rule
// match rules has either string match, regex match or other match rule as
// its alternatives (e.g. int, string... or some user match rule)
// match rule is treated as a contained match. no class will get created.
Direction:
    "up"|"down"|"left"|"right"
;

// special rule for comments.
Comment:
    /\/\/.*$/
;